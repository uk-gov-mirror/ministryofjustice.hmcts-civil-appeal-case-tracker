<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================
     14 Oct 2011 09:35:53

     Project    listing_calendar
     descriptionlisting_calendar Public application
     ====================================================================== -->
<project name="Listing Calendar" default="development_build" basedir=".">
    <property environment="env"/>
    <property file="LC.antuser.properties"/>
    <property name="build.dir" value="build"/>

    <!-- =================================
          target: Development_Build
       ================================= -->
    <target name="development_build" depends="gulp, compile, copy_resources_dev"
            description="Unloads previous application version and deploys a new one">
        <echo>Starting a development build - this will compile the code and produce a war file</echo>
        <echo>*****************************************************************************</echo>
        <echo>If anything odd happens (like it isn't deploying ) make sure you close any references to any files in the
            app
        </echo>
        <echo>Please enjoy the flight and ensure all luggage is safely stowed</echo>
        <tstamp>
            <format property="time" pattern="dd/MM/yyyy hh:mm:ss aa" unit="hour"/>
        </tstamp>
        <echo>*****************************************************************************</echo>
        <echo>Time started: ${time} - action occuring in build directoy!</echo>
        <antcall target="war"/>
    </target>

    <path id="build_classpath">
        <fileset dir="WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test_classpath">
        <pathelement location="${build.dir}/WEB-INF/classes"/>
        <pathelement path="${env.Path}"/>
        <pathelement path="${graphvizbin}"/>
        <fileset dir="test/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- - - - - - - - - - - - - - - - - -
          target: info
         - - - - - - - - - - - - - - - - - -->
    <target name="info">
        <echo>ant.version=${ant.version}</echo>
        <echo>ant.home=${ant.home}</echo>
    </target>


    <!-- =================================
          target: deployment_build
         ================================= -->
    <target name="prod_build" depends="gulp, compile, copy_resources_live" description="description">
        <echo>Starting a full build - this will compile the code and jar it ready for deployment</echo>
        <echo>*****************************************************************************</echo>
        <echo>This may be a good time to go get something to drink - while the tests run...</echo>
        <tstamp>
            <format property="time" pattern="dd/MM/yyyy hh:mm:ss aa" unit="hour"/>
        </tstamp>
        <echo>*****************************************************************************</echo>
        <echo>Time started: ${time} - action occuring in deploy directoy!</echo>
        <antcall target="war"/>
        <zip basedir="deploy" destfile="listing_calendar.zip"/>
    </target>

    <!-- - - - - - - - - - - - - - - - - -
          target: war
         - - - - - - - - - - - - - - - - - -->
    <target name="war">
        <echo>Create a deployable war</echo>
        <war destfile="deploy/CACT.war" webxml="WEB-INF/web.xml">
            <fileset dir="${build.dir}"/>
        </war>
    </target>

    <!-- - - - - - - - - - - - - - - - - -
          target: build_javadoc
         - - - - - - - - - - - - - - - - - -->
    <target name="build_javadoc" description="generates javadoc and also UML Diagram">
        <echo>Creating JavaDocs and copying to the deployment directory</echo>
        <property name="myclasspath" refid="test_classpath"/>
        <pathconvert pathsep="${line.separator}|   |-- "
                     property="echo.path.compile"
                     refid="test_classpath">
        </pathconvert>
        <echo message="Classpath = ${echo.path.compile}"/>
        <mkdir dir="./docs/javadocs"/>
        <javadoc sourcepath="src" packagenames="com.MOJICT.*" destdir="./docs/javadocs"
                 classpathref="test_classpath" private="true">
            <doclet name="org.umlgraph.doclet.UmlGraphDoc" path="./test/lib/UMLGraph.jar">
                <param name="-attributes"/>
                <param name="-operations"/>
                <param name="-qualify"/>
                <param name="-types"/>
                <param name="-visibility"/>
            </doclet>
        </javadoc>
        <apply executable="dot" dest="./docs/javadocs" parallel="false">
            <arg value="-Tpng"/>
            <arg value="-o"/>
            <targetfile/>
            <srcfile/>
            <fileset dir="docs/javadocs" includes="*.dot"/>
            <mapper type="glob" from="*.dot" to="*.png"/>
        </apply>
    </target>

    <!-- =================================
          target: compile
         ================================= -->
    <target name="compile" depends="make_move_directories" description="compile source files">
        <javac srcdir="WEB-INF/src" destdir="${build.dir}/WEB-INF/classes" debug="on">
            <classpath refid="build_classpath"/>
        </javac>
    </target>

    <!-- - - - - - - - - - - - - - - - - -
          target: copy_resources
         - - - - - - - - - - - - - - - - - -->
    <target name="copy_resources">

        <echo>Copying all files that exist external to the jar files but are needed for deployment</echo>

        <copy todir="${build.dir}">
            <fileset dir=".">
                <include name="error.jsp"/>
                <include name="index.jsp"/>
                <include name="search.jsp"/>
                <include name="detail.jsp"/>
                <include name="Version.txt"/>
                <include name="HTMLCalendar.htm"/>
            </fileset>
        </copy>

        <echo>Copy hibernate.cfg.xml to build</echo>

        <copy todir="${build.dir}/WEB-INF/classes" overwrite="true">
            <fileset dir="WEB-INF/classes">
                <include name="hibernate.cfg.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="copy_resources_dev" depends="copy_resources">

        <echo>hibernate.cfg.xml - Replace values for DEV DB connection</echo>

        <replace file="${build.dir}/WEB-INF/classes/hibernate.cfg.xml" token="@@SQLSERVER_URL@@"
                 value="${env.DEV_CASE_TRACKER_URL}"/>
        <replace file="${build.dir}/WEB-INF/classes/hibernate.cfg.xml" token="@@SQLSERVER_USER@@"
                 value="${env.DEV_CASE_TRACKER_USER}"/>
        <replace file="${build.dir}/WEB-INF/classes/hibernate.cfg.xml" token="@@SQLSERVER_PWD@@"
                 value="${env.DEV_CASE_TRACKER_PWD}"/>
    </target>


    <target name="copy_resources_live" depends="copy_resources">

        <echo>hibernate.cfg.xml - Replace values for LIVE DB connection</echo>

        <replace file="${build.dir}/WEB-INF/classes/hibernate.cfg.xml" token="@@SQLSERVER_URL@@"
                 value="${env.LIVE_CASE_TRACKER_URL}"/>
        <replace file="${build.dir}/WEB-INF/classes/hibernate.cfg.xml" token="@@SQLSERVER_USER@@"
                 value="${env.LIVE_CASE_TRACKER_USER}"/>
        <replace file="${build.dir}/WEB-INF/classes/hibernate.cfg.xml" token="@@SQLSERVER_PWD@@"
                 value="${env.LIVE_CASE_TRACKER_PWD}"/>
    </target>


    <!-- - - - - - - - - - - - - - - - - -
          target: copy_test_resources
         - - - - - - - - - - - - - - - - - -->
    <target name="copy_test_resources">
    </target>

    <!-- - - - - - - - - - - - - - - - - -
          target: clean
         - - - - - - - - - - - - - - - - - -->
    <target name="clean" depends="info">
        <delete dir="${build.dir}" quiet="true">
            <exclude name="assets/stylesheets/**"/>
        </delete>
        <delete dir="testresult" quiet="true"/>
        <delete dir="deploy" quiet="true"/>

        <delete includeemptydirs="true">
            <fileset dir="WEB-INF/classes" includes="**/.svn/" defaultexcludes="false">
                <exclude name="**/lib/**"/>
                <exclude name="**/*.class"/>
                <include name="**/.svn/"/>
            </fileset>
        </delete>
    </target>

    <!-- - - - - - - - - - - - - - - - - -
          target: make_move_directories
         - - - - - - - - - - - - - - - - - -->
    <target name="make_move_directories" depends="clean">
        <echo>Make directories in the build directory</echo>
        <mkdir dir="${build.dir}"/>

        <mkdir dir="deploy"/>

        <echo>Move (copy!) directories to the build directory</echo>

        <copy todir="${build.dir}">
            <fileset dir=".">
                <include name="WEB-INF/**"/>
                <include name="admin/**"/>
                <include name="includes/**"/>
                <include name="css/**"/>
                <include name="files/**"/>
                <include name="js/**"/>
                <include name="images/**"/>
                <include name="common/**"/>
                <include name="assets/images/**"/>
                <include name="assets/stylesheets/images/**"/>
                <include name="assets/stylesheets/fonts/**"/>

                <exclude name="WEB-INF/**/*.class"/>
                <exclude name="WEB-INF/classes/hibernate*"/>
            </fileset>
        </copy>
        <antcall target="copy-govuk-frontend-toolkit"/>
    </target>

    <!-- =================================
          target: run_selenium_tests
         ================================= -->
    <target name="run_selenium_tests" description="run the selected selenium test">
        <java classname="selenium.IAFT_EndToEndFullTest" fork="true">
            <classpath refid="test_classpath"/>
        </java>
    </target>

    <!-- =================================
          target: run_junit_tests
         ================================= -->
    <target name="run_junit_tests" description="run the selected junit tests">
        <delete quiet="true">
            <fileset dir="./testreport/xml"/>
        </delete>
        <mkdir dir="./testreport"/>
        <mkdir dir="./testreport/xml"/>

        <junit fork="no" printsummary="yes" haltonfailure="no" showoutput="yes" dir=".">
            <classpath refid="test_classpath"/>
            <classpath>
                <pathelement path="${build.dir}"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="./testreport/xml">
                <fileset dir="test">
                    <include name="**/IAFT_EndToEndFullTest.java"/>
                    <include name="**/DemoTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="./testreport">
            <fileset dir="./testreport/xml">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="./testreport"/>
        </junitreport>
    </target>

    <!-- ================================
    GOVUK - Templates
    ===================================== -->
    <target name="copy-govuk-frontend-toolkit">
        <echo>Copy GOVUK Frontend toolkit images to assets folder</echo>
        <copy todir="${build.dir}/assets/images/govuk-frontend-toolkit">
            <fileset dir="./node_modules/govuk_frontend_toolkit/images"/>
        </copy>
    </target>

    <!-- ===============================
    Gulp Task - Build GOVUK GDS styling and assets
    ==================================== -->
    <target name="gulp">
        <exec executable="node_modules/gulp/bin/gulp.js" dir=".">
            <arg value="styles"/>
        </exec>
    </target>
</project>
